# Python3 program to implement XOR - Encryption 
# The same function is used to encrypt and 
# decrypt 
def encryptDecrypt(inpString): 
  
    # Define XOR key 
    # Any character value will work 
    xorKey = 'P'; 
  
    # calculate length of input string 
    length = len(inpString); 
  
    # perform XOR operation of key 
    # with every caracter in string 
    for i in range(length): 
      
        inpString = (inpString[:i] + 
             chr(ord(inpString[i]) ^ ord(xorKey)) +
                     inpString[i + 1:]); 
        print(inpString[i], end = ""); 
      
    return inpString; 
  
# Driver Code 
if __name__ == '__main__': 
    sampleString = "GeeksforGeeks"; 
  
    # Encrypt the string 
    print("Encrypted String: ", end = ""); 
    sampleString = encryptDecrypt(sampleString); 
    print("\n"); 
  
    # Decrypt the string 
    print("Decrypted String: ", end = ""); 
    encryptDecrypt(sampleString); 


======================================================================================================
// C++ program to implement XOR - Encryption 
#include<bits/stdc++.h> 
  
// The same function is used to encrypt and 
// decrypt 
void encryptDecrypt(char inpString[]) 
{ 
    // Define XOR key 
    // Any character value will work 
    char xorKey = 'P'; 
  
    // calculate length of input string 
    int len = strlen(inpString); 
  
    // perform XOR operation of key 
    // with every caracter in string 
    for (int i = 0; i < len; i++) 
    { 
        inpString[i] = inpString[i] ^ xorKey; 
        printf("%c",inpString[i]); 
    } 
} 
  
// Driver program to test above function 
int main() 
{ 
    char sampleString[] = "GeeksforGeeks"; 
  
    // Encrypt the string 
    printf("Encrypted String: "); 
    encryptDecrypt(sampleString); 
    printf("\n"); 
  
    // Decrypt the string 
    printf("Decrypted String: "); 
    encryptDecrypt(sampleString); 
  
    return 0; 
} 

================================================================================================
// Java program to implement XOR - Encryption 
class XOREncryption 
{ 
    // The same function is used to encrypt and 
    // decrypt 
    static String encryptDecrypt(String inputString) 
    { 
        // Define XOR key 
        // Any character value will work 
        char xorKey = 'P'; 
  
        // Define String to store encrypted/decrypted String 
        String outputString = ""; 
  
        // calculate length of input string 
        int len = inputString.length(); 
  
        // perform XOR operation of key 
        // with every caracter in string 
        for (int i = 0; i < len; i++)  
        { 
            outputString = outputString +  
            Character.toString((char) (inputString.charAt(i) ^ xorKey)); 
        } 
  
        System.out.println(outputString); 
        return outputString; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        String sampleString = "GeeksforGeeks"; 
  
        // Encrypt the string 
        System.out.println("Encrypted String"); 
        String encryptedString = encryptDecrypt(sampleString); 
  
        // Decrypt the string 
        System.out.println("Decrypted String"); 
        encryptDecrypt(encryptedString); 
    } 
} 
  
// This code is contributed by Vivekkumar Singh 